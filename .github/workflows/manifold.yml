# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-16.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a set of commands using the runners shell
    - name: install CUDA
      run: |
        wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.2.148-1_amd64.deb
        sudo dpkg -i cuda-repo-ubuntu1604_9.2.148-1_amd64.deb
        sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
        sudo bash -c 'echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list'
        sudo apt update
        sudo apt install -y libglm-dev libassimp-dev libboost-graph-dev
        CUDA=9.2
        CUDA_APT=${CUDA/./-}
        sudo apt install -y cuda-drivers cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT}
        sudo apt install -y cuda-nvgraph-dev-${CUDA_APT} cuda-cublas-dev-${CUDA_APT} cuda-cusparse-dev-${CUDA_APT} cuda-curand-dev-${CUDA_APT} cuda-cusolver-dev-${CUDA_APT}
        sudo apt clean
        CUDA_HOME=/usr/local/cuda-${CUDA}
        LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
        PATH=${CUDA_HOME}/bin:${PATH} 

    - name: Build with CUDA
      run: |
        OMP_NUM_THREADS=4
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release .. && make
        
    - name: Build with C++
      run: cmake -DCMAKE_BUILD_TYPE=Release -DMANIFOLD_USE_OMP=ON .. && make
      
    - name: Test with C++
      run: |
        cd test
        ./manifold_test
      
